IonicSiteComponents.loadBundle("cz7vrrja",["exports"],function(e){var t=window.IonicSiteComponents.h,n=function(){function e(){}return e.prototype.componentDidLoad=function(){},e.prototype.selectionChanged=function(e){var t=e.detail,n=this.el.querySelectorAll("ionic-toggle-button");Array.prototype.forEach.call(n,function(e){e.deselect()});var o=t.tab;t.select(),console.log("Selecting this one",o,t);var r=this.el.querySelectorAll("ionic-toggle-tab");console.log("Found tabs",r),Array.prototype.forEach.call(r,function(e){e.hide(),e.tab===o&&e.show()})},e.prototype.render=function(){return t("div",{class:"toggle-content"},t("div",{class:"toggle-buttons"},t("slot",{name:"buttons"})),t("div",{class:"toggle-tabs"},t("slot",{name:"tabs"})))},Object.defineProperty(e,"is",{get:function(){return"ionic-toggle"},enumerable:!0,configurable:!0}),Object.defineProperty(e,"encapsulation",{get:function(){return"shadow"},enumerable:!0,configurable:!0}),Object.defineProperty(e,"properties",{get:function(){return{el:{elementRef:!0}}},enumerable:!0,configurable:!0}),Object.defineProperty(e,"listeners",{get:function(){return[{name:"toggleSelected",method:"selectionChanged"}]},enumerable:!0,configurable:!0}),Object.defineProperty(e,"style",{get:function(){return":host{display:block}.toggle-buttons{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center}"},enumerable:!0,configurable:!0}),e}();e.IonicToggle=n,Object.defineProperty(e,"__esModule",{value:!0})});