.d\:flx {
  display:flex;
}
.d\:blk {
  display:block;
}
.d\:i-flx {
  display:inline-flex;
}
.d\:flx\:w {
  display:flex;
  flex-wrap:wrap;
}
.d\:flx\:c {
  display: flex;
  flex-direction:column;
}
.ai\:c {
  align-items:center;
}
.ai\:s {
  align-items:flex-start;
}
.fg {
  flex-grow: 1;
}

.jc\:c {
  justify-content: center !important;
}
.jc\:sb {
  justify-content: space-between
}
.jc\:se {
  justify-content: space-evenly;
}

.ctr\:x {
  margin-left: auto;
  margin-right: auto;
}
.ctr\:txt {
  text-align: center;
}

.strip {
  display: flex;
}

.strip\:w {
  display: flex;
  flex-wrap: wrap;
}

.strip\:w > * {
  flex-grow: 1;
}

.strip > * {
  flex-grow: 1;
}

// --------------------- STACK --------------------------
@mixin stack($element: '&', $mY: null){
  #{$element}[class~='stack'] {    
    display: flex;
    flex-direction: column;
  }

  #{$element}[class~='stack'] > * {
    margin-top: 0;
    margin-bottom: 0;
  } 

  #{$element}.stack > * + * {
    margin-top: #{$mY};
  }

  #{$element}.stack\:rec * + * {
    margin-top: #{$mY};
  }  
}

// ------------------------ BOX -----------------------------
@mixin box($element:'&', $pY:null, $pX:null, $back:null, $color:null,
           $fB: null, $mTop:null, $mBot:null, $mLeft:null, $mRight:null, $fG: 9999,
           $w: null, $h: null, $mxW: null, $mnW: null, $mxH:null, $mnH:null, $bR: null) {
  #{$element}.box {
    box-sizing: border-box;
    padding-left: #{$pX};
    padding-right: #{$pX};
    padding-top: #{$pY};
    padding-bottom: #{$pY};
    margin-left: #{$mLeft};
    margin-right: #{$mRight};
    margin-top: #{$mTop};
    margin-bottom: #{$mBot};
    background: #{$back};
    color: #{$color};
    flex-basis: #{$fB};   
    flex-grow: #{$fG};
    width: #{$w};
    height: #{$h};
    max-width: #{$mxW};
    min-width: #{$mnW};
    max-height: #{$mxH};
    min-height: #{$mnH};
    border-radius: #{$bR};
  }
}

@mixin spacer($el: '&', $mxW: null, $mnW: null, $mnH: null, $mxH: null, $fB: null, $fG: 1) {
  #{$el} .spacer {
    max-width: $mxW;
    min-width: $mnW;
    max-height: $mxH;
    min-height: $mnH;
    @if $fB {
      flex-basis: $fB;
    } @else {
      flex-basis: 0px;
    }    
    flex-grow: $fG;
  }
}
// ---------------------- CLUSTER ---------------------------------
@mixin cluster($el: '&', $sX: 0, $sY: 0) {
  #{$el}.cluster {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
    margin-left: calc(#{$sX} / 2 * -1);
    margin-right: calc(#{$sX} / 2 * -1);
    margin-top: calc(#{$sY} / 2 * -1);
    margin-bottom: calc(#{$sY} / 2 * -1);
  }

  #{$el}.cluster > * {
    margin-left: calc(#{$sX} / 2);
    margin-right: calc(#{$sX} / 2);
    margin-top: calc(#{$sY} / 2);
    margin-bottom: calc(#{$sY} / 2);
  }
}
// ----------------------- SWITCHER -----------------------------
@mixin switcher($element:"&", $count:null, $threshold:null, $gap:null){
  #{$element}.switcher > * {
    display: flex;
    flex-wrap: wrap;
    margin: calc((#{$gap} / 2) * -1);
  }
  
  #{$element}.switcher > * > * {
    flex-grow: 1;
    flex-basis: calc((#{$threshold} - (100% - #{$gap})) * 999);
    margin: calc(#{$gap} / 2);
  }
  
  #{$element}.switcher > * > :nth-last-child(n+#{$count + 1}),
  #{$element}.switcher > * > :nth-last-child(n+#{$count + 1}) ~ * {
    flex-basis: 100%;
  }
}